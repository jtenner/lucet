mod example {
    // Primitive types:
    // `i8`, `i16`, `i32`, `i64`, `u8`, `u16`, `u32`, `u64`, `f32`, `f64`.

    // Enumerations

    enum color {
        red,
        blue,
        green,
    }

    // Aliases

    type colour = color;
    type col = colour;

    // Structures

    struct st {
        a: i8,
        b: i32,
        c: color,
    }

    // functions

    fn set_color(to: i32) -> r: i32;

    fn get_color_as_ptr() -> c_ptr: i32
    where color: out color <- *c_ptr;


    fn get_structure(of: i32) -> s: i32;

    fn debug_str(ptr: i32, len: i32) -> r: i32
    where str: in u8 <- [ptr, len];

}
